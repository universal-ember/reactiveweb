{"version":3,"file":"get-promise-state.typetest.js","sources":["../src/get-promise-state.typetest.ts"],"sourcesContent":["import { expectTypeOf } from 'expect-type';\n\nimport { getPromiseState } from './get-promise-state.ts';\n\n// We accept 4 types of inputs\nexpectTypeOf(getPromiseState(2).resolved).toEqualTypeOf<undefined | number>();\nexpectTypeOf(getPromiseState(() => 2).resolved).toEqualTypeOf<undefined | number>();\nexpectTypeOf(getPromiseState(() => Promise.resolve(2)).resolved).toEqualTypeOf<\n  undefined | number\n>();\nexpectTypeOf(getPromiseState(Promise.resolve(2)).resolved).toEqualTypeOf<undefined | number>();\n\n// Other Properties\nexpectTypeOf(getPromiseState(2).isLoading).toEqualTypeOf<boolean>();\nexpectTypeOf(getPromiseState(2).error).toMatchTypeOf<\n  | undefined\n  | null\n  | {\n      reason: string;\n      original: unknown;\n    }\n>();\n"],"names":["expectTypeOf","getPromiseState","resolved","toEqualTypeOf","Promise","resolve","isLoading","error","toMatchTypeOf"],"mappings":";;;AAIA;AACAA,YAAY,CAACC,eAAe,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAACC,aAAa,EAAsB,CAAA;AAC7EH,YAAY,CAACC,eAAe,CAAC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAACC,aAAa,EAAsB,CAAA;AACnFH,YAAY,CAACC,eAAe,CAAC,MAAMG,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACH,QAAQ,CAAC,CAACC,aAAa,EAE3E,CAAA;AACHH,YAAY,CAACC,eAAe,CAACG,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAACH,QAAQ,CAAC,CAACC,aAAa,EAAsB,CAAA;;AAE9F;AACAH,YAAY,CAACC,eAAe,CAAC,CAAC,CAAC,CAACK,SAAS,CAAC,CAACH,aAAa,EAAW,CAAA;AACnEH,YAAY,CAACC,eAAe,CAAC,CAAC,CAAC,CAACM,KAAK,CAAC,CAACC,aAAa,EAOjD"}